/* Unified CRUD Form themeable styles */

.form {
  padding: 24px;
  background-color: var(--content-bg);
  border-radius: 12px;
  color: var(--text-primary);
  border: 1px solid var(--border-light);
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
}

.headerRow {
  display: flex;
  align-items: center;
  justify-content: space-between;
  margin-bottom: 24px;
  padding-bottom: 12px;
  border-bottom: 2px solid var(--primary-blue);
}

.errorChip {
  background: var(--error-bg, #fee2e2);
  color: var(--error-strong, #dc2626);
  padding: 8px 12px;
  border-radius: 6px;
  font-size: 12px;
  font-weight: 600;
  display: inline-flex;
  align-items: center;
  gap: 6px;
}

.toggleRow {
  display: inline-flex;
  align-items: center;
  gap: 10px;
}

.layoutControls {
  display: inline-flex;
  align-items: center;
  gap: 8px;
}

.layoutSelect {
  padding: 4px 8px;
  border: 1px solid var(--border-color);
  border-radius: 6px;
  font-size: 12px;
  background: var(--surface, #fff);
  color: var(--text-primary);
}

.fullWidthToggleBtn {
  margin-inline-start: auto;
  font-size: 11px;
  border: 1px solid var(--border-light);
  background: var(--surface);
  color: var(--text-secondary);
  border-radius: 6px;
  padding: 2px 6px;
  cursor: pointer;
}
.fullWidthToggleBtn.active {
  background: var(--accent-primary);
  color: var(--on-accent);
  border-color: transparent;
}

.toggleLabel {
  display: inline-flex;
  align-items: center;
  gap: 6px;
  font-size: 12px;
  color: var(--text-secondary);
}

.resetLink {
  border: none;
  background: none;
  color: var(--accent-primary, #2563eb);
  text-decoration: underline;
  font-size: 12px;
  cursor: pointer;
}

.fieldBlock {
  animation: fadeSlide 200ms ease;
}

.sectionInfo {
  margin-top: 16px;
  padding: 8px 12px;
  background: var(--info-bg);
  border-radius: 6px;
  font-size: 12px;
  color: var(--text-secondary);
  display: flex;
  align-items: center;
  gap: 6px;
  border: 1px solid var(--border-light);
}

.headerTitle {
  margin: 0;
  color: var(--heading-text);
  font-size: 1.5rem;
}

.headerSubtitle {
  margin: 4px 0 0 0;
  color: var(--text-secondary);
  font-size: 14px;
}

.labelRow {
  display: flex;
  align-items: center;
  gap: 8px;
  margin-bottom: 8px;
  font-weight: 600;
  color: var(--text-primary);
  font-size: 14px;
}

.requiredStar {
  color: var(--error);
}

.autoFilledPill {
  color: var(--success);
  font-size: 12px;
  background: rgba(33, 193, 151, 0.1);
  padding: 2px 6px;
  border-radius: 4px;
}

.fullWidthBadge {
  font-size: 11px;
  background: var(--accent);
  color: var(--button_text);
  padding: 2px 6px;
  border-radius: 4px;
  font-weight: 500;
}

.infoText {
  color: var(--text-secondary);
  font-size: 12px;
  margin-top: 4px;
  display: flex;
  align-items: center;
  gap: 4px;
}

.errorText {
  color: var(--error);
  font-size: 12px;
  margin-top: 4px;
  display: flex;
  align-items: center;
  gap: 4px;
}

.fullWidthBlock {
  margin-bottom: 24px;
  width: 100%;
  border-bottom: 1px solid var(--border-light);
  padding-bottom: 16px;
}

.gridContainer {
  display: grid;
  gap: 20px;
  align-items: start;
}

/* Reduced gap for more compact layout */
.gridContainer[data-columns="2"],
.gridContainer[data-columns="3"] {
  gap: 16px;
}

.columnContainer {
  display: flex;
  flex-direction: column;
  gap: 16px;
}

/* More compact spacing for multi-column layouts */
.gridContainer[data-columns="2"] .columnContainer,
.gridContainer[data-columns="3"] .columnContainer {
  gap: 14px;
}

.listReset {
  margin: 0;
  padding-right: 20px;
}

.listItem {
  margin-bottom: 4px;
}

.actionsRow {
  display: flex;
  gap: 12px;
  padding-top: 12px;
}

btnGrow {
  flex: 1;
}

/* Use native :disabled styles for buttons */
button.ultimate-btn:disabled {
  opacity: 0.6;
  cursor: not-allowed;
}

/* Input styling */
.inputBase {
  width: 100%;
  padding: 12px 16px;
  background-color: var(--input-bg);
  color: var(--text-primary);
  border: 1px solid var(--border-color);
  border-radius: 8px;
  font-size: 14px;
  transition: border-color 0.3s ease, box-shadow 0.3s ease;
  outline: none;
}
.inputBase:focus-visible {
  border-color: var(--accent);
  box-shadow: 0 0 0 3px rgba(32, 118, 255, 0.1);
}
.inputSelect {
  cursor: pointer;
}
.inputDisabled {
  cursor: not-allowed;
  opacity: 0.7;
}
.inputError {
  border: 2px solid var(--error);
}
.inputSuccess {
  border: 2px solid var(--success);
}
.inputMonospace {
  font-family: monospace;
}
.textarea {
  resize: vertical;
  font-family: inherit;
  line-height: 1.4;
  /* Let React component control height via inline styles */
}
.passwordWrapper { position: relative; }
.passwordInput { padding-right: 48px; }
.passwordToggle {
  position: absolute;
  right: 12px;
  top: 50%;
  transform: translateY(-50%);
  background: none;
  border: none;
  color: var(--text-secondary);
  cursor: pointer;
  padding: 4px;
}

.autoFillBadge {
  position: absolute;
  top: -10px;
  right: 20px;
  background: linear-gradient(135deg, var(--success), var(--success-strong));
  color: var(--button_text);
  padding: 8px 16px;
  border-radius: 8px;
  font-size: 12px;
  font-weight: 600;
  z-index: 1000;
  box-shadow: 0 4px 12px rgba(33, 193, 151, 0.3);
  animation: slideDown 0.3s ease-out;
  display: flex;
  align-items: center;
  gap: 6px;
}

.errorSummary {
  margin-bottom: 20px;
  padding: 16px;
  background-color: var(--error-bg, #fee2e2);
  border: 1px solid var(--error-border, #fca5a5);
  border-radius: 8px;
  color: var(--error-text, #991b1b);
}

.errorLink {
  background: none;
  border: none;
  color: var(--error-strong, #b91c1c);
  text-decoration: underline;
  cursor: pointer;
  padding: 0;
}

@keyframes slideDown {
  from { transform: translateY(-20px); opacity: 0; }
  to { transform: translateY(0); opacity: 1; }
}

@keyframes fadeSlide {
  from { transform: translateY(6px); opacity: 0; }
  to { transform: translateY(0); opacity: 1; }
}

/* Account Selector Fields - Make them wider and more prominent */
.accountSelectorField {
  min-width: 320px;
  width: 100%;
}

/* Special styling for account-related fields */
.fieldBlock:has([id*="account"]) {
  min-width: 320px;
}

.fieldBlock:has([id*="account"]) > div:first-of-type {
  min-width: 320px;
  width: 100%;
}

/* Make searchable selects wider by default */
.fieldBlock:has([role="combobox"]) {
  min-width: 300px;
}

/* Enhanced grid container for better account field layout */
.gridContainer.accountFocused {
  grid-template-columns: 1fr 1fr;
  gap: 20px;
}

@media (max-width: 768px) {
  .gridContainer.accountFocused {
    grid-template-columns: 1fr;
  }
  
  .fieldBlock:has([id*="account"]) {
    min-width: 100%;
  }
}

